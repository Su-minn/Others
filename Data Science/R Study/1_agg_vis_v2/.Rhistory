# 작업 폴더 확인하기
getwd()
# 데이터 불러오기
read.csv('data/test.csv')
# '='을 활용해서 저장하기
test_data = read.csv('data/test.csv')
## 인코딩 문제(feat. '한글이 깨져요') ----
read.csv('data/pop_seoul_euckr.csv')
read.csv('data/pop_seoul_utf8.csv')
# 인코딩 지정
pop_seoul = read.csv('data/pop_seoul_euckr.csv', fileEncoding='euc-kr')
pop_seoul = read.csv('data/pop_seoul_utf8.csv', fileEncoding='UTF-8')
# 데이터 샘플 살펴보기
head(pop_seoul)
tail(pop_seoul, n=10)
# 데이터 특성 확인하기
str(pop_seoul)
tail(pop_seoul, n=10)
# 데이터 특성 확인하기
str(pop_seoul)
names(pop_seoul)
nrow(pop_seoul)
ncol(pop_seoul)
# 변수 선택
pop_seoul$구분
## 데이터이름$변수이름
## (같이 실습) data 폴더에 있는 StudentsPerformance.csv 불러와서 sp로 저장하기
# (같이 실습) summary( ) 함수의 활용
##2 openxlsx 패키지를 활용한 엑셀파일 불러오기
# install.pacakges( )를 활용한 패키지 설치 ----
## R은 핵심적인 기능만 포함한 최소 설치
## 이후 필요한 기능(패키지)을 다운로드/설치 후 불러와 사용
install.packages('openxlsx')
# 변수 선택
pop_seoul$구분
## 데이터이름$변수이름
## (같이 실습) data 폴더에 있는 StudentsPerformance.csv 불러와서 sp로 저장하기
sp = read.csv('data/StudentsPerformance.csv')
mean(sp$math.score)
hist(sp$math.score)
summary(sp)
# library( )로 설치된 패키지 불러오기
library(openxlsx)
# 데이터 불러오기
SHEET1 = read.xlsx('data/test.xlsx', sheet=1)
## xlsx 파일 경로와 시트 번호를 지정
SHEET1
SHEET2 = read.xlsx('data/test.xlsx', sheet=2, startRow=3)
## startRow= 옵션으로 데이터 시작 행번호 지정 가능
SHEET2
SHEET3 = read.xlsx('data/test.xlsx', sheet=3, colNames=FALSE)
## 첫 행이 변수이름이 아니라 관측치일때, colNames=FALSE 옵션 사용
SHEET3
SHEET2 = read.xlsx('data/test.xlsx', sheet=2)
## startRow= 옵션으로 데이터 시작 행번호 지정 가능
SHEET2
# dplyr 패키지 설치
install.packages('dplyr')
library(dplyr)
delivery = read.csv('data/SKT.csv', fileEncoding='UTF-8')
head(delivery)
slice(delivery, c(1,3,5:10))
##1.2 filter( )로 조건에 맞는 데이터 행만 불러오기
filter(delivery, 시군구=='성북구')
##1.3 arrange( )로 정렬하기(오름차순)
arrange(delivery, 시군구, 요일, 업종)
##1.4 select( )로 변수를 선택하거나 제외하기
select(delivery, 통화건수)
##1.4 select( )로 변수를 선택하거나 제외하기
select(delivery, 통화건수)
# ":"를 활용한 순서대로 여러변수 선택하기
select(delivery, 시간대:통화건수)
# "-"를 활용한 변수제외
select(delivery, -요일)
##1.5 distinct( )로 반복 내용제거하기
distinct( delivery, 업종)
distinct( delivery, 요일, 업종)
summarise(delivery,
mean(통화건수),
m = min(통화건수),
M = max(통화건수))
summarise(delivery_grp, mean(통화건수), m = min(통화건수), M = max(통화건수))
##1.8 group_by( )로 그룹 지정해주기
delivery_grp = group_by(delivery, 시군구)
summarise(delivery_grp, mean(통화건수), m = min(통화건수), M = max(통화건수))
##1.11 파이프라인( %>% )을 활용한 연속작업
delivery %>%
filter(업종=='중국음식') %>%
group_by(시군구) %>%
summarise(mean_call = mean(통화건수)) %>%
arrange(desc(mean_call))
# 데이터 저장
new_data = delivery %>% filter(업종=='중국음식') %>% group_by(시군구) %>%
summarise(mean_call = mean(통화건수)) %>% arrange(desc(mean_call))
# 결과를 csv파일로 저장
write.csv(new_data, 'result.csv', row.names=FALSE)
# 예제 데이터 불러오기
ins = read.csv('data/insurance.csv')
ins %>%
filter(sex='female') %>%
group_by(region)
ins %>%
filter(sex=='female') %>%
group_by(region)
ins %>%
filter(sex=='female') %>%
group_by(region) %>%
arrange(region)
#2 charges가 10000이상인 관측치 중에서 smoker별 평균 age 계산
ins %>%
filter(charges>=10000) %>%
group_by(smoker) %>%
summarise(m = min(age))
#2 charges가 10000이상인 관측치 중에서 smoker별 평균 age 계산
ins %>%
filter(charges>=10000) %>%
group_by(smoker) %>%
summarise(m = average(age))
#2 charges가 10000이상인 관측치 중에서 smoker별 평균 age 계산
ins %>%
filter(charges>=10000) %>%
group_by(smoker) %>%
summarise(mean = mean(age))
ins %>%
filter(sex=='female') %>%
count(region)
# 데이터 불러오기
library(openxlsx)
ibm_hr = read.xlsx('data/ibm_hr_sample.xlsx')
head(ibm_hr)
# plot 함수로 색깔 점 찍기
plot(0,0, pch=16, cex=10, col='black')
plot(0,0, pch=16, cex=10, col='pink')
plot(0,0, pch=16, cex=10, col='dodgerblue')
# RColorBrewer 패키지의 활용
install.packages('RColorBrewer')
library(RColorBrewer)
# RColorBrewer 패키지의 활용
install.packages('RColorBrewer')
# 데이터 요약/처리를 위한 패키지도 불러오기
library(dplyr)
library(tidyr)
# RColorBrewer 패키지의 활용
install.packages('RColorBrewer')
# ggplot2 패키지 설치, 불러오기
install.packages('ggplot2')
